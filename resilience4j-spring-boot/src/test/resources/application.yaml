resilience4j.circuitbreaker:
    circuitBreakerAspectOrder: 400
    backends:
        backendA:
            ringBufferSizeInClosedState: 6
            ringBufferSizeInHalfOpenState: 2
            waitInterval: 5000
            failureRateThreshold: 70
            eventConsumerBufferSize: 10
            registerHealthIndicator: true
            recordFailurePredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
            recordExceptions:
                - io.github.resilience4j.circuitbreaker.RecordedException
            ignoreExceptions:
                - io.github.resilience4j.circuitbreaker.IgnoredException
        backendB:
            ringBufferSizeInClosedState: 10
            ringBufferSizeInHalfOpenState: 5
            waitInterval: 5000
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
            registerHealthIndicator: true

resilience4j.ratelimiter:
    rateLimiterAspectOrder: 401
    limiters:
        backendA:
            limitForPeriod: 10
            limitRefreshPeriodInMillis: 1000
            timeoutInMillis: 0
            subscribeForEvents: true
            registerHealthIndicator: true
        backendB:
            limitForPeriod: 6
            limitRefreshPeriodInMillis: 500
            timeoutInMillis: 3000

management.security.enabled: false