resilience4j.retry:
  retryAspectOrder: 399
  backends:
    retryBackendA:
      maxRetryAttempts: 3
      waitDuration: 600
      retryExceptionPredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      retryExceptions:
      - java.io.IOException
      ignoreExceptions:
      - io.github.resilience4j.circuitbreaker.IgnoredException

resilience4j.circuitbreaker:
  circuitBreakerAspectOrder: 400
  backends:
    backendA:
      ringBufferSizeInClosedState: 6
      ringBufferSizeInHalfOpenState: 2
      waitInterval: 5000
      failureRateThreshold: 70
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
      recordFailurePredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      recordExceptions:
      - io.github.resilience4j.circuitbreaker.RecordedException
      ignoreExceptions:
      - io.github.resilience4j.circuitbreaker.IgnoredException
    backendB:
      ringBufferSizeInClosedState: 10
      ringBufferSizeInHalfOpenState: 5
      waitInterval: 5000
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      registerHealthIndicator: false

resilience4j.ratelimiter:
  rateLimiterAspectOrder: 401
  limiters:
    backendA:
      limitForPeriod: 10
      limitRefreshPeriodInMillis: 1000
      timeoutInMillis: 0
      subscribeForEvents: true
      registerHealthIndicator: true
    backendB:
      limitForPeriod: 6
      limitRefreshPeriodInMillis: 500
      timeoutInMillis: 3000

management.security.enabled: false
management.endpoint.health.show-details: always