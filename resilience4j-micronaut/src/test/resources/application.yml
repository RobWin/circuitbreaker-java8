resilience4j.retry:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: .1
      retryExceptionPredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      retryExceptions:
        - java.io.IOException
        - feign.FeignException
      ignoreExceptions:
        - io.github.resilience4j.circuitbreaker.IgnoredException
  instances:
    retryBackendA:
      baseConfig: default
    retryBackendB:
      baseConfig: default
    retryBackendC:
      maxRetryAttempts: 3
      waitDuration: .1
      retryExceptionPredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      retryExceptions:
        - java.lang.IllegalArgumentException
      ignoreExceptions:
        - io.github.resilience4j.circuitbreaker.IgnoredException
    retryDummyFeignClient:
      baseConfig: default
    retryBackendD:
      baseConfig: default

resilience4j.circuitbreaker:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  configs:
    default:
      slidingWindowSize: 100
      slidingWindowType: COUNT_BASED
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 10
      failureRateThreshold: 60
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
      allowHealthIndicatorToFail: false
  instances:
    backendA:
      registerHealthIndicator: true
      allowHealthIndicatorToFail: false
      slidingWindowSize: 6
      permittedNumberOfCallsInHalfOpenState: 2
      waitDurationInOpenState: 5
      failureRateThreshold: 70
      eventConsumerBufferSize: 20
      recordFailurePredicate: io.github.resilience4j.circuitbreaker.RecordFailurePredicate
      recordExceptions:
        - io.github.resilience4j.circuitbreaker.RecordedException
      ignoreExceptions:
        - io.github.resilience4j.circuitbreaker.IgnoredException
    backendB:
      slidingWindowSize: 10
      slidingWindowType: TIME_BASED
      permittedNumberOfCallsInHalfOpenState: 5
      waitDurationInOpenState: 5000
      failureRateThreshold: 50
      eventConsumerBufferSize: 20
      registerHealthIndicator: false
    backendC:
      slidingWindowSize: 10
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      permittedNumberOfCallsInHalfOpenState: 5
      waitDurationInOpenState: 1000
      failureRateThreshold: 50
      eventConsumerBufferSize: 20
      registerHealthIndicator: false
    backendSharedA:
      baseConfig: default
      slidingWindowSize: 6
    backendSharedB:
      baseConfig: default
      slidingWindowType: TIME_BASED
    dummyFeignClient:
      baseConfig: default
      slidingWindowSize: 18
      permittedNumberOfCallsInHalfOpenState: 6


resilience4j.ratelimiter:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  configs:
    default:
      limitForPeriod: 10
      limitRefreshPeriod: 1
      timeoutDuration: 0
      subscribeForEvents: true
      registerHealthIndicator: true
      allowHealthIndicatorToFail: false
  instances:
    backendA:
      baseConfig: default
    backendB:
      limitForPeriod: 100
      limitRefreshPeriod: .5
      timeoutDuration: 3
    backendCustomizer:
      limitForPeriod: 100
      limitRefreshPeriod: .5
      timeoutDuration: 3
    rateLimiterDummyFeignClient:
      baseConfig: default

resilience4j.bulkhead:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  configs:
    default:
      maxWaitDuration: 10
      maxConcurrentCalls: 2
  instances:
    backendA:
      maxConcurrentCalls: 1
    backendB:
      baseConfig: default
    backendD:
      baseConfig: default
    dummyFeignClient:
      maxWaitDuration: 100
      maxConcurrentCalls: 3
    backendCustomizer:
      maxWaitDuration: 100
      maxConcurrentCalls: 10

resilience4j.thread-pool-bulkhead:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
      keepAliveDuration: 1
  instances:
    backendB:
      tags:
      baseConfig: default
    backendC:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
    backendD:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
      contextPropagator:
        - io.github.resilience4j.TestThreadLocalContextPropagator

resilience4j.timelimiter:
  tags:
    tag1: tag1Value
    tag2: tag2Value
  time-limiter-aspect-order: 398
  configs:
    default:
      timeoutDuration: 1
      cancelRunningFuture: false
  instances:
    backendA:
      timeoutDuration: 5s
